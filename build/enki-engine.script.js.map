{"version":3,"sources":["webpack://EnkiEngine/webpack/bootstrap","webpack://EnkiEngine/./node_modules/uuid/dist/esm-browser/bytesToUuid.js","webpack://EnkiEngine/./node_modules/uuid/dist/esm-browser/index.js","webpack://EnkiEngine/./node_modules/uuid/dist/esm-browser/md5.js","webpack://EnkiEngine/./node_modules/uuid/dist/esm-browser/rng.js","webpack://EnkiEngine/./node_modules/uuid/dist/esm-browser/sha1.js","webpack://EnkiEngine/./node_modules/uuid/dist/esm-browser/v1.js","webpack://EnkiEngine/./node_modules/uuid/dist/esm-browser/v3.js","webpack://EnkiEngine/./node_modules/uuid/dist/esm-browser/v35.js","webpack://EnkiEngine/./node_modules/uuid/dist/esm-browser/v4.js","webpack://EnkiEngine/./node_modules/uuid/dist/esm-browser/v5.js","webpack://EnkiEngine/./src/componentManager.js","webpack://EnkiEngine/./src/entityManager.js","webpack://EnkiEngine/./src/index.js","webpack://EnkiEngine/./src/storage/index.js","webpack://EnkiEngine/./src/storage/memoryStorage.js","webpack://EnkiEngine/./src/systemManager.js","webpack://EnkiEngine/./src/templateManager.js","webpack://EnkiEngine/./src/utils/errors.js","webpack://EnkiEngine/./src/utils/validate.js"],"names":["ComponentManager","storage","verbose","_storage","_registeredComponents","Map","_log","$msg","console","log","_validate","ComponentId","componentValue","c","get","Object","entries","k","v","validateFunctionName","charAt","toUpperCase","slice","optional","type","args","push","allowed","childType","Validate","defaultSchema","keys","includes","add","entityId","ComponentName","value","defaultValues","fromEntries","map","addEntityComponent","assign","remove","removeEntityComponent","register","componentSchema","hasOwnProperty","name","data","set","list","isRegistered","has","dump","res","forEach","length","constructor","components","load","e","EntityManager","id","entity","addEntity","removeEntity","eid","getEntity","getEntityComponents","getEntities","values","entities","en","Engine","storageType","mode","storageInstance","rest","Storage","entityMgr","componentMgr","systemMgr","templateMgr","SystemManager","TemplateManager","MemoryStorage","state","_verbose","Entities","Set","ComponentMap","EntityComponents","componentsName","undefined","getEntityByComponents","Array","isArray","Error","reduce","acc","val","size","filter","i","componentName","component","getState","_registeredSystems","_registerEvents","_query","q","system","query","events","execute","returnValues","instance","registerEvent","eventName","triggerEvent","eventData","_registeredTemplates","registerComponents","ValidationError","create","templateName","template","d","err","message","t","templates","isNumber","isNaN","isAny","isString","String","isEnum","cur","isComponent","isMap","from","isSet"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA,4BAA4B;AAC5B;;AAEA;AACA;;AAEe,0EAAW,E;;;;;;;;;;;;ACjB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACA;AACA;;;;;;;;;;;;;ACFxC;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,kEAAG,E;;;;;;;;;;;;ACtNlB;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACbA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;AC5FnB;AAAA;AAAA;AAA2B;AACgB;AAC3C;AACA;AACA;;AAEA;;A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","file":"enki-engine.script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction bytesToUuid(buf, offset_) {\n  var offset = offset_ || 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  return (byteToHex[buf[offset + 0]] + byteToHex[buf[offset + 1]] + byteToHex[buf[offset + 2]] + byteToHex[buf[offset + 3]] + '-' + byteToHex[buf[offset + 4]] + byteToHex[buf[offset + 5]] + '-' + byteToHex[buf[offset + 6]] + byteToHex[buf[offset + 7]] + '-' + byteToHex[buf[offset + 8]] + byteToHex[buf[offset + 9]] + '-' + byteToHex[buf[offset + 10]] + byteToHex[buf[offset + 11]] + byteToHex[buf[offset + 12]] + byteToHex[buf[offset + 13]] + byteToHex[buf[offset + 14]] + byteToHex[buf[offset + 15]]).toLowerCase();\n}\n\nexport default bytesToUuid;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || bytesToUuid(b);\n}\n\nexport default v1;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import bytesToUuid from './bytesToUuid.js';\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = uuidToBytes(namespace);\n    }\n\n    if (!Array.isArray(value)) {\n      throw TypeError('value must be an array of bytes');\n    }\n\n    if (!Array.isArray(namespace) || namespace.length !== 16) {\n      throw TypeError('namespace must be uuid string or an Array of 16 byte values');\n    } // Per 4.3\n\n\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return bytesToUuid(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return bytesToUuid(rnds);\n}\n\nexport default v4;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","import * as Validate from './utils/validate';\n\nexport const ComponentManager = (storage, verbose) => {\n\n    const _storage = storage;\n    const _registeredComponents = new Map();\n\n    const _log = (...$msg) => {\n        if (verbose) {\n            console.log('Component Manager: ', ...$msg);\n        }\n    };\n\n    const _validate = (ComponentId, componentValue) => {\n        //check if component is registered\n        const c = _registeredComponents.get(ComponentId);\n        if (typeof c === 'undefined') {\n            _log(`Component ${ComponentId} is not registered`);\n            return false;\n        }\n\n        //check if values are correct\n        for (let [k, v] of Object.entries(c)) {\n            const validateFunctionName = 'is' + v['type'].charAt(0).toUpperCase() + v['type'].slice(1);\n            //if value is not passed and we have a default or value is optional then we are good\n            if (typeof componentValue[k] === 'undefined' && (\n                (typeof (v.optional) !== 'undefined' && v.optional === true) ||\n                typeof (v.default) !== 'undefined')\n            ) {\n                continue;\n            }\n            // 'any' type of data is not validated.\n            if (v.type == 'any') {\n                continue;\n            }\n            //we have a value so we test\n            let args = [];\n            if (v.type == 'enum') {\n                args.push(v.allowed);\n            }\n            if (v.type == 'array') {\n                args.push(v.childType);\n            }\n            if (!Validate[validateFunctionName](componentValue[k], ...args)) {\n                _log(`${k} => ${componentValue[k]} failed the validation ${validateFunctionName}`);\n                return false;\n            }\n        }\n\n        //check if extra non existent property were passed to component\n        const defaultSchema = Object.keys(c);\n        for (const k of Object.keys(componentValue)) {\n            if (!defaultSchema.includes(k)) {\n                _log(`${k} is not a valid property for the ${ComponentId} Component.`);\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Add a Component to an existing entity\n     * @param {any} entityId - Entity Id\n     * @param {string} ComponentId - Component type to add\n     * @param {object} value - Object following the data structure of component to pass initial values to component\n     * @returns {boolean} True if succesfull else false\n     */\n    const add = (entityId, ComponentName, value = {}) => {\n        if (_validate(ComponentName, value)) {\n            const c = _registeredComponents.get(ComponentName);\n            const defaultValues = Object.fromEntries(Object.entries(c).map(([k, v]) => {\n                return [k, v.default];\n            }));\n            _storage.addEntityComponent(entityId, ComponentName, Object.assign(defaultValues, value));\n            return true;\n        } else {\n            _log(`Component ${ComponentName} could not added to ${entityId} due to fail validation.`);\n            return false;\n        }\n    };\n\n    /**\n     * Remove a component from an existing Entity\n     * @param {any} entityId - Entity Id\n     * @param {string} ComponentName - Component to remove\n     * @returns {boolean} - True if successfull else false\n     */\n    const remove = (entityId, ComponentName) => {\n        return _storage.removeEntityComponent(entityId, ComponentName);\n    };\n\n    /**\n     * Register a new component type\n     * @param {object} componentSchema\n     * @returns {boolean} - True if successfull, else false\n     */\n    const register = (componentSchema) => {\n        if (!componentSchema.hasOwnProperty('name')) {\n            return false;\n        }\n        _log(`Registering ${componentSchema.name} Component`)\n        const data = componentSchema.data || {};\n        _registeredComponents.set(componentSchema.name, data);\n        return true;\n    };\n\n    const list = () => {\n        return new Map(_registeredComponents)\n    }\n\n    const isRegistered = (name) => {\n        return _registeredComponents.has(name);\n    }\n\n    const dump = () => {\n        const res = []\n        _registeredComponents.forEach((data, name) => {\n            if (Object.keys(data).length === 0 && data.constructor === Object) {\n                res.push({name})\n            } else {\n                res.push({\n                    name: name,\n                    data: data\n                })\n            }\n\n        })\n        return {components: res};\n    }\n\n    const load = (data) => {\n        if (!data.hasOwnProperty('components')) {\n            return false\n        }\n        //register all components\n        for (let c of data['components']) {\n            register(c)\n        }\n        \n        // add all components to dumped entities\n        if (data.hasOwnProperty('entities')) {\n            for (let e of data['entities']) {\n                for (let c of e['components']) {\n                    add(e['id'], c['name'], c['data'])\n                }\n            }\n        }\n        return true\n    }\n\n    return {\n        add,\n        remove,\n        register,\n        list,\n        isRegistered,\n        dump,\n        load\n    };\n};\n","import {v4 as uuidv4} from 'uuid';\n\nexport const EntityManager = (storage) => {\n    const _storage = storage;\n\n    /**\n     * Add a new entity\n     * @param {string} [id] - Entity Id\n     * @returns {string} - Entity Id\n     */\n    const add = (id) => {\n        const entity = id || uuidv4();\n        _storage.addEntity(entity);\n        return entity;\n    };\n\n    /**\n     * Remove an entity\n     * @param {*} entity - Entity Id to remove\n     * @returns {boolean} - True if successful, else false\n     */\n    const remove = (entity) => {\n        return _storage.removeEntity(entity);\n    };\n\n    /**\n     * Retrieve an entity and its components\n     * @param {*} id - Entity Id\n     * @returns {{id:string, components: Map}} - Entity Object with id and components. Undefined if it does not exists\n     */\n    const get = (id) => {\n        const eid = _storage.getEntity(id);\n        if (typeof eid == 'undefined') {\n            return;\n        }\n        const components = _storage.getEntityComponents(eid)\n        return {\n            id: eid,\n            components: components\n        };\n    };\n\n    /**\n     * Retrieve all entities stored\n     * @returns {Iterator} - Iterator that list all entities\n     */\n    const list = () => {\n        return _storage.getEntities().values();\n    };\n\n    const dump = () => {\n        //dump entities\n        const data = {\n            entities: []\n        };\n        const entities = list();\n        for (let e of entities) {\n            const entity = get(e)\n            const c = []\n            entity['components'].forEach((data, name) => {\n                if (Object.keys(data).length === 0 && data.constructor === Object) {\n                    c.push({name})\n                } else {\n                    c.push({\n                        name: name,\n                        data: data\n                    })\n                }\n\n            })\n            const en = {\n                id: e,\n                components: c\n            }\n            data['entities'].push(en);\n        }\n        return data;\n    };\n\n    const load = (data) => {\n        if (!data.hasOwnProperty('entities')) {\n            return false\n        }\n        for (let e of data['entities']) {\n            add(e['id'])\n        }\n        return true;\n    }\n\n    return {\n        add,\n        get,\n        list,\n        remove,\n        dump,\n        load\n    };\n};\n","import {EntityManager} from './entityManager.js';\nimport {ComponentManager} from './componentManager.js';\nimport {SystemManager} from './systemManager.js';\nimport {TemplateManager} from './templateManager';\nimport {Storage} from './storage/index.js';\n\n/**\n * Create an Enki Engine instance\n * @param {string} storageType - The type of storage to use, either 'MemoryStorage' or 'custom'\n * @param {string} mode - debug or production.\n * @param {func} storageInstance - a Storage instance, only used if storageType is set to 'custom'\n * @param {any} rest - unused at the moment\n * @returns {{EntityManager: {add: (function(*): string), remove: remove}, ComponentManager: {add: add, remove: (function(*=, *=): boolean|*), register: register}, SystemManager: {execute: execute, register: register}}}\n * @constructor\n */\nconst Engine = ({storageType = 'MemoryStorage', mode = 'production', storageInstance = null, ...rest} = {}) => {\n\n    //get storage\n    console.log(`Starting Enki ECS Engine with ${storageType}`)\n\n    const verbose = mode == 'debug' ? true : false;\n    let storage = null;\n    if (storageType == 'custom') {\n        storage = storageInstance(verbose);\n    } else {\n        storage = Storage[storageType](verbose);\n    }\n\n    const entityMgr = EntityManager(storage, verbose);\n\n    const componentMgr = ComponentManager(storage, verbose);\n\n    const systemMgr = SystemManager(storage, verbose);\n\n    const templateMgr = TemplateManager(entityMgr, componentMgr, verbose);\n\n    /**\n     * Dump the full state in an Object\n     * than can be serialised\n     * @return {{templates:Array,entities:Array,components:Array}} - dump of state\n     */\n    const dump = () => {\n        let dump = {}\n\n        dump = Object.assign(dump, templateMgr.dump());\n        dump = Object.assign(dump, entityMgr.dump());\n        dump = Object.assign(dump, componentMgr.dump());\n\n        return dump;\n    }\n\n    /**\n     * Load a given state\n     * @param data\n     * @return {boolean} - True if successful\n     */\n    const load = (data) => {\n        return templateMgr.load(data) &&\n                entityMgr.load(data) &&\n                componentMgr.load(data);\n    }\n\n\n    return {\n        EntityManager: entityMgr,\n        SystemManager: systemMgr,\n        ComponentManager: componentMgr,\n        TemplateManager: templateMgr,\n        Storage: storage,\n        dump,\n        load,\n    }\n\n}\n\nexport default Engine;\nexport const _storage = Storage;","import { MemoryStorage } from './memoryStorage';\n\nexport const Storage =  {\n  MemoryStorage\n}\n","/**\n *\n * @param {boolean} verbose - If True will send log to console\n * @param {{Entities: {Set}, ComponentMap:{Map}, EntityComponents: {Map} }} state - Object containing 3 property that must react like Map or Set. Will be used to store the state\n * @returns {{addEntity: (function(*): Set<any>), removeEntityComponent: removeEntityComponent, getEntityComponents: (function(*): any), getEntities: (function(): Set<*>), addEntityComponent: addEntityComponent, getEntity: (function(*=): *), removeEntity: (function(*=): boolean), getEntityByComponents: (function(Array): *)}}\n * @constructor\n */\nexport const MemoryStorage = (verbose, state = {}) => {\n    const _verbose = verbose;\n    const Entities = state.Entities || new Set(); //list of entities created\n    const ComponentMap = state.ComponentMap || new Map(); //a map for quickly retrieve entity that have a given component (ComponentId => [entity1, entity2...])\n    const EntityComponents = state.EntityComponents || new Map(); // a 3D map with primary key being entity ID with a map of all components\n\n    const _log = (...$msg) => {\n        if (verbose) {\n            console.log('Memory Store: ', ...$msg)\n        }\n    }\n\n    /**\n     * Add an Entity to storage\n     * @param {any} entityId - Any value that is unique\n     * @returns {Set<any>}\n     */\n    const addEntity = (entityId) => {\n        EntityComponents.set(entityId, new Map())\n        _log(`Saving Entity ${entityId}`)\n        return Entities.add(entityId)\n    }\n\n    /**\n     * Remove an entity from storage\n     * This delete all its components as well\n     * @param entityId\n     * @returns {boolean}\n     */\n    const removeEntity = (entityId) => {\n        _log(`Removing Entity ${entityId}`)\n        const componentsName = EntityComponents.get(entityId)\n        componentsName.forEach((v,k) => {\n            ComponentMap.get(k).delete(entityId)\n        })\n        EntityComponents.delete(entityId)\n        return Entities.delete(entityId)\n    }\n\n    /**\n     * Return EntityId or undefined if the entity does not exists\n     * @param entityId\n     * @returns {entityId}\n     */\n    const getEntity = (entityId) => {\n        _log(`Get Entity ${entityId}`)\n        const e = Entities.has(entityId) ? entityId : undefined;\n        _log(`Found Entity ${entityId}`)\n        return e\n    }\n\n    /**\n     * Return a Set containing all entities\n     * @returns {Set<any>}\n     */\n    const getEntities = () => {\n        //returning a new set so users can not override the Entities Set by inadvertence\n        return new Set(Entities);\n    }\n\n    /**\n     * Get all components attached to an entity\n     * @param {any} entityId - EntityId to retrieve components from\n     * @returns {Set} - Set of components\n     */\n    const getEntityComponents = (entityId) => {\n        _log(`Get Entity Components for ${entityId}`)\n        return EntityComponents.has(entityId) ? EntityComponents.get(entityId) : new Map();\n    }\n\n    /**\n     * List all entities that have the component attached\n     * @param {array} components - array of components name\n     * @returns {Set} - List of entities\n     */\n    const getEntityByComponents = (components) => {\n        _log(`Get List of Entities by Components for `, components)\n        if (!Array.isArray(components)) {\n            throw Error('Components must be an array');\n        }\n        const e = components.reduce((acc, val) => {\n            if (acc.size == 0) {\n                return ComponentMap.get(val) || new Set();\n            }\n\n            return new Set([...acc].filter(i => {\n                const c = ComponentMap.get(val)\n                if(typeof c === 'undefined') {\n                    return false\n                }\n                return c.has(i)\n            }))\n        }, new Set());\n        _log(`Found Entities`, e)\n        return e;\n    }\n\n    /**\n     * Add a component to an entity\n     * @param {any} entityId - EntityId\n     * @param {string} componentName - Name of Component to add to entity\n     * @param {object} component - Component value for initialisation\n     */\n    const addEntityComponent = (entityId, componentName, component) => {\n        _log(`Add Component ${componentName} to Entity ${entityId}`)\n        if (!ComponentMap.has(componentName)) {\n            ComponentMap.set(componentName, new Set([entityId]));\n            EntityComponents.get(entityId).set(componentName, component);\n        } else {\n            ComponentMap.get(componentName).add(entityId);\n            EntityComponents.get(entityId).set(componentName, component);\n        }\n    }\n\n    /**\n     * Remove Component from an entity\n     * @param {any }entityId - EntityId to remove component from\n     * @param {string} componentName - Component Name\n     * @returns {boolean} - True if successfull\n     */\n    const removeEntityComponent = (entityId, componentName) => {\n        _log(`Remove Component ${componentName} to Entity ${entityId}`)\n        if (!ComponentMap.has(componentName)) {\n            return false;\n        } else {\n            return EntityComponents.get(entityId).delete(componentName) &&\n                ComponentMap.get(componentName).delete(entityId);\n        }\n    }\n\n    /**\n     * Return an object containing the current state\n     * @returns {{ComponentMap: Map<any, any>, EntityComponents: Map<any, any>, Entities: Set<any>}}\n     */\n    const getState = () => {\n        return {\n            Entities,\n            ComponentMap,\n            EntityComponents\n        }\n    }\n\n    return {\n        addEntity,\n        removeEntity,\n        getEntity,\n        getEntities,\n        addEntityComponent,\n        removeEntityComponent,\n        getEntityByComponents,\n        getEntityComponents,\n        getState\n    }\n}\n","import {isArray, isString} from './utils/validate';\n\nexport const SystemManager = (storage, verbose) => {\n\n    const _storage = storage;\n    const _registeredSystems = new Map();\n    const _registerEvents = new Set();\n\n\n    const _log = (...$msg) => {\n        if (verbose) {\n            console.log('System Manager: ', ...$msg)\n        }\n    }\n\n    const _query = (q) => {\n        return _storage.getEntityByComponents(q);\n    }\n\n    const _validate = (system) => {\n        //check that system is a function with the correct prototype\n        if (typeof (system) !== 'function' || !system.hasOwnProperty('query')) {\n            _log('Trying to register a system that is either not a function or does not have a name and query defined');\n            return false;\n        }\n\n        if (!isArray(system.query, 'string')) {\n            _log(`System ${system.name} does not have a correct query. A query must be an array of string.`)\n            return false;\n        }\n\n        if (!isArray(system.events, 'string')) {\n            _log(`System ${system.name} does not have a correct events trigger setup. Systems must have an events property that is an empty array or an array of Events name.`)\n            return false;\n        }\n\n        const res = system()\n        if (!res.hasOwnProperty('execute') || typeof (res.execute) !== 'function') {\n            _log(`System ${system.name} does not have an execute function`)\n            return false\n        }\n\n        if (!res.hasOwnProperty('events') || typeof (res.events) !== 'function') {\n            _log(`System ${system.name} does not have an events function`)\n            return false\n        }\n\n        return true\n    }\n\n\n    /**\n     * Execute all registered systems\n     * @returns {Map{Array}} - Return values from each system\n     */\n    const execute = () => {\n        // loop through all systems\n        const returnValues = new Map();\n        for (let [name, system] of _registeredSystems) {\n            const entities = _query(system.query);\n            returnValues.set(name, new Map())\n            entities.forEach((e) => {\n                returnValues.get(name).set(e, system.instance.execute(_storage.getEntityComponents(e)))\n            })\n        }\n        return returnValues;\n    }\n\n    /**\n     * Register a new system\n     * @param {function} system - A system to be registered\n     * @returns {boolean} - True if successful else false\n     */\n    const register = (system) => {\n        if (_validate(system)) {\n            _log(`Registering ${system.name} System`)\n            _registeredSystems.set(system.name, {instance: system(), query: system.query, events: system.events});\n            return true;\n        } else {\n            _log(`System ${system.name} failed validation and was not registered.`);\n            return false;\n        }\n    }\n\n    /**\n     * Register Event\n     * @param {string} eventName - Event Name\n     * @returns {boolean} - True if registered\n     */\n    const registerEvent = (eventName) => {\n        if (isString(eventName)) {\n            _registerEvents.add(eventName);\n            return true;\n        } else {\n            _log(`Event ${eventName} failed validation and was not registered.`);\n            return false;\n        }\n    }\n\n    const triggerEvent = (eventName, eventData, filter) => {\n        if (!_registerEvents.has(eventName)) {\n            _log(`Event ${eventName} is not registered.`);\n            return false;\n        }\n\n        // loop through all systems\n        const returnValues = new Map();\n        for (let [name, system] of _registeredSystems) {\n            if (system.events.includes(eventName)) {\n                const entities = _query(system.query);\n                returnValues.set(name, new Map())\n                entities.forEach((e) => {\n                    if (!filter || filter.includes(e)) {\n                        returnValues.get(name).set(e, system.instance.events(_storage.getEntityComponents(e), eventName, eventData))\n                    }\n                })\n            }\n        }\n        return returnValues;\n    }\n\n    return {\n        execute,\n        register,\n        registerEvent,\n        triggerEvent\n    }\n\n}\n","import {ValidationError} from './utils/errors';\nimport {isString, isArray, isMap} from './utils/validate'\n\nexport const TemplateManager = (entityMgr, componentMgr, verbose) => {\n    const _registeredTemplates = new Map()\n\n    const _log = (...$msg) => {\n        if (verbose) {\n            console.log('Template Manager: ', ...$msg);\n        }\n    };\n\n\n    /**\n     * Register a new Template for use\n     *\n     * @param {string} name - Name of the template, must be unique\n     * @param {Array} components - Array of Components used by this templates. Cannot be empty.\n     * @param {Map} defaultValues - Map of default Values for each components in `components` param. Key must be a component name.\n     * @param {boolean} registerComponents - If true, will register components if they are not already registered. if false, will fail registration of template if a component is not registered\n     * @returns {Boolean} - True if registered\n     *\n     * @throws ValidationError - Error if the templates is invalid\n     */\n    const register = (name, components, defaultValues = null, registerComponents = true) => {\n        _log('Registering template')\n\n        if (!isString(name)) {\n            throw new ValidationError('Invalid name for template');\n        }\n\n        // check iof template already exists\n        if (_registeredTemplates.has(name)) {\n            throw new ValidationError('A template with this name already exists.');\n        }\n\n        if (!isArray(components, 'components') || components.length == 0) {\n            throw new ValidationError('Invalid components list');\n        }\n\n        // check if all components are registered, if not registered\n        for(let c of components) {\n            if(!componentMgr.isRegistered(c['name']) && registerComponents) {\n                componentMgr.register(c)\n            } else if (!componentMgr.isRegistered(c['name']) && !registerComponents) {\n                throw new ValidationError(`Component ${c['name']} is not registered.`);\n            }\n        }\n\n        if (defaultValues !== null && !isMap(defaultValues)) {\n            throw new ValidationError('defaultValues must be a Map.');\n        }\n\n        _log('Template validation successful')\n\n        _registeredTemplates.set(name, {\n            name,\n            components,\n            defaultValues: defaultValues || new Map()\n        })\n\n\n        return true;\n    }\n\n    /**\n     *  Create an entity based on the given template\n     * @param {string} templateName - Name of the template to use\n     * @param {Map} values - Map of component values\n     * @param {string} [entityId] - Optional Entity Id to use during creation\n     * @returns {string} - Id of the entity added\n     *\n     * @throws ValidationError|Error\n     */\n    const create = (templateName, values, entityId) => {\n        if (!_registeredTemplates.has(templateName)) {\n            throw new ValidationError('Template does not exist');\n        }\n\n        const template = _registeredTemplates.get(templateName);\n\n\n        const id = entityMgr.add(entityId)\n        for (let c of template['components']) {\n            try {\n                // prepare values for component\n                let v = {}\n                if(typeof values !== 'undefined') {\n                    v = values.get(c['name']);\n                }\n                const d = template['defaultValues'].get(c['name']) || {};\n                const data = Object.assign(d, v)\n\n                //add component to entity\n                componentMgr.add(id, c['name'], data)\n            } catch (err) {\n                //we need to delete the entity and all associated components\n                entityMgr.remove(id)\n                _log(`TemplateManager: Failed to add ${c['name']} component to entity.`)\n                _log(err.message)\n\n                //bubble up error\n                throw new Error(`TemplateManager: Failed to add ${c['name']} component to entity during creation.`)\n            }\n\n        }\n\n\n        return id;\n    }\n\n    /**\n     * Return a Map containing all registered templates\n     * @returns {Map<any, any>}\n     */\n    const list = () => {\n        return new Map(_registeredTemplates)\n    }\n\n    /**\n     * Remove a template.\n     * Removing a template does not remove existing enitties created with this template.\n     *\n     * @param {string} templateName - Name of the template to remove\n     * @returns {boolean} - True if template was removed\n     *\n     * @throws ValidationError\n     */\n    const remove = (templateName) => {\n        if (!_registeredTemplates.has(templateName)) {\n            throw new ValidationError('Template does not exist');\n        }\n        return _registeredTemplates.delete(templateName);\n    }\n\n    /**\n     * Load several templates and entities in one go from an object\n     *\n     * @param {object} schema - Object\n     */\n    const load = (data) => {\n        try {\n            if(data.hasOwnProperty('templates')) {\n                // register all templates\n                _log('Loading templates')\n                for( let t of data['templates']) {\n                    register(t['name'], t['components'], new Map(Object.entries(t['defaultValues'])))\n                }\n            } else {\n                _log('Your object must contains a `templates` property');\n                return false\n            }\n        } catch(err) {\n            _log(err);\n            throw new Error('Not able to load templates because of malformed data.');\n        }\n        return true\n    }\n\n    /**\n     * Dump all templates and template entities into an object\n     */\n    const dump = () => {\n        const data = {\n            templates: [],\n        }\n\n        // dump templates\n        _registeredTemplates.forEach((t) => {\n\n            data['templates'].push({\n                name: t['name'],\n                components: t['components'],\n                defaultValues: Object.fromEntries(t['defaultValues'])\n            });\n        })\n\n        return data;\n\n    }\n\n    return {\n        list,\n        register,\n        create,\n        remove,\n        dump,\n        load\n    };\n};\n","export class ValidationError extends Error {\n    constructor(message) {\n        super(message);\n\n        this.name = 'ValidationError';\n    }\n}\n","import {ValidationError} from './errors'\n\nexport const isNumber = (value) => {\n    return !isNaN(value)\n}\n\nexport const isAny = (value) => {\n    if (typeof (value) !== 'undefined') {\n        return true;\n    }\n    return false;\n}\n\nexport const isString = (value) => {\n    if (typeof value === 'string' || value instanceof String) {\n        return true;\n    }\n    return false;\n}\n\nexport const isEnum = (value, allowed) => {\n    return allowed.includes(value)\n}\n\nexport const isArray = (value, type) => {\n    //check if array\n    if (!Array.isArray(value)) {\n        return false\n    }\n\n    //not checking types\n    if(typeof type == 'undefined') {\n        return true\n    }\n\n    //check type\n    let res = false;\n    switch (type) {\n        case 'string':\n            res = value.reduce((acc, cur) => {\n                return acc && isString(cur)\n            }, true)\n            break;\n        case 'number':\n            res = value.reduce((acc, cur) => {\n                return acc && isNumber(cur)\n            }, true)\n            break;\n        case 'components':\n            res = value.reduce((acc, cur) => {\n                return acc && isComponent(cur)\n            }, true)\n            break;\n        case 'mixed' :\n            res = true;\n            break;\n        case 'any':\n            res = true;\n            break;\n        default:\n            throw new ValidationError(`Type ${type} not supported in Array`);\n    }\n    return res;\n}\n\nexport const isMap = (value, type) => {\n    if (! (value instanceof Map)) {\n        return false\n    }\n\n    let values = Array.from(value.values())\n\n    return isArray(values, type)\n\n}\n\nexport const isSet = (value, type) => {\n    if (! (value instanceof Set)) {\n        return false\n    }\n\n    let values = Array.from(value.values())\n\n    return isArray(values, type)\n}\n\nexport const isComponent = (value) => {\n    if (!value.hasOwnProperty('name')) {\n        return false;\n    }\n\n    // data is optional because we can have flag components\n    // but if we have data, it must have the correct structure\n    if (value.hasOwnProperty('data')) {\n        //check if data is an object and make sure all entries have a type property defined.\n        const data = Object.entries(value.data);\n        //if value.data is not iterable, then it returns an empty array\n        if (data.length == 0) {\n            return false\n        }\n        //check that the actual values of data are correct.\n        return data.reduce((acc, cur) => {\n            return acc\n                && cur.length > 1\n                && isString(cur[0]) // property key must be a string\n                && cur[1].hasOwnProperty('type') // value of each data must contain a `type` property\n                && isEnum(cur[1]['type'], ['string', 'number', 'any', 'mixed']) // check if `type` is supported\n        }, true)\n        \n    }\n\n    return true;\n\n\n}"],"sourceRoot":""}